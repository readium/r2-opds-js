  'cson2json': '
    sed -E "s/#ECMASCRIPT#/es5/g" package-scripts-build.cson > tmp-build.cson &&
    sed -E "s/#ECMASCRIPT#/es6-es2015/g" package-scripts-build.cson >> tmp-build.cson &&
    sed -E "s/#ECMASCRIPT#/es7-es2016/g" package-scripts-build.cson >> tmp-build.cson &&
    sed -E "s/#ECMASCRIPT#/es8-es2017/g" package-scripts-build.cson >> tmp-build.cson &&
    json -I -f package.json -e "this.scripts=$(cat package-scripts.cson tmp-build.cson | node node_modules/.bin/cson2json)" &&
    rimraf tmp-*.cson
  '

  'copydist': '
    cpy "./dist/" ../r2-streamer-js/node_modules/r2-opds-js/ --cwd=./ &&
    cpy "./dist/" ../r2-navigator-js/node_modules/r2-opds-js/ --cwd=./ &&
    cpy "./dist/" ../r2-testapp-js/node_modules/r2-opds-js/ --cwd=./ &&
    cpy "./dist/" ../readium-desktop/node_modules/r2-opds-js/ --cwd=./
  '

  'quick-build-dist': '
    npm run transpile:typescript:es8-es2017+afterdist &&
    npm run copydist
  '

  '_pregitdist': '
    npm run build:all
  '

  'gitdist': '
    cd ../r2-opds-js-dist/ &&
    git checkout -B develop &&
    (git pull || echo "pull") &&
    (git --no-pager status || echo status) &&
    ((rimraf "*" && echo rimrafOK) || echo rimrafNOK) &&
    cpy --flat ../r2-opds-js/package.json . &&
    cpy --flat ../r2-opds-js/package-lock.json . &&
    cpy --flat ../r2-opds-js/LICENSE . &&
    cpy --flat ../r2-opds-js/README.md . &&
    cpy "./docs/" ../r2-opds-js-dist/ --cwd=../r2-opds-js/ &&
    cpy "./dist/" ../r2-opds-js-dist/ --cwd=../r2-opds-js/ &&
    (git add * || echo add) &&
    (git commit -a -m "add new dist" || echo commit) &&
    (git push --set-upstream origin develop || echo push) &&
    (git --no-pager status || echo status) &&
    cd ../r2-opds-js
  '

  'prepare_': '
    npm run build:all
  '

  'prepublish_': '
    npm run prepare_
  '

  'typescript:imports': '
    node tools/typescript_relativize_path_mapping_imports.js
  '

  'gitrev': '
    node tools/gitrev.js &&
    cat dist/gitrev.json
  '

  'afterdist': '
    npm run typescript:imports &&
    npm run gitrev
  '

  'prebuild': '
    npm run lint
  '

  'build': '
    npm run transpile:typescript
  '

  'postbuild': '
    npm run afterdist
  '

  'prebuild:all': '
    npm run lint
  '

  'build:all': '
    npm run transpile:typescript:all
  '

  'postbuild:all': '
    npm run afterdist
  '

  'clean': '
    rimraf ./dist &&
    mkdirp ./dist
  '

  'lint': '
    npm run lint:all &&
    npm run lint:typescript:full
  '

  'lint:all': '
    eclint
      check
      "**/*"
      "!**/*.node"
      "!.git/**/*"
      "!node_modules*/**/*"
      "!dist/**/*"
      "!ava-ts/**/*"
      "!misc/**/*"
      "!now/**/*"
      "!.vscode/**/*"
      "!.history/**/*"
      "!**/.DS_Store"
      "!**/*.epub"
      "!**/*.cbz"
      "!**/*.jpg"
      "!**/*.jpeg"
      "!**/*.png"
      "!**/*.log"
  '

  'lint:typescript:full': '
    eslint
      "./src/**/*.ts"
      "./test/**/*.ts"
  '

  'pretranspile:typescript': '
    npm run clean
  '

  'transpile:typescript': '
    tsc --pretty -p "./tsconfig.json"
  '

  'pretranspile:typescript:all': '
    npm run clean
  '

  'transpile:typescript:all': '
    npm run transpile:typescript:es5 &&
    npm run transpile:typescript:es6-es2015 &&
    npm run transpile:typescript:es7-es2016 &&
    npm run transpile:typescript:es8-es2017
  '

  'transpile:typescript:es8-es2017+afterdist': '
    npm run transpile:typescript:es8-es2017 &&
    npm run afterdist
  '

  'transpile:typescript:single': '
    node tools/typescript_compile_single.js
  '

  'posttranspile:typescript:single': '
    npm run afterdist
  '

  'avaResetCache': '
     ava --reset-cache
  '

  'test': '
    cross-env DEBUG=r2:*
    ava
  '

  'testTS': '
     cross-env
     DEBUG=r2:*
     TYPESCRIPT=1
     ava
  '
